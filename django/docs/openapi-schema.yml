openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /v1/accounts/users/:
    get:
      operationId: listUsers
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: username
        required: false
        in: query
        description: username
        schema:
          type: string
      - name: first_name
        required: false
        in: query
        description: first_name
        schema:
          type: string
      - name: last_name
        required: false
        in: query
        description: last_name
        schema:
          type: string
      - name: email
        required: false
        in: query
        description: email
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: date_joined
        required: false
        in: query
        description: date_joined
        schema:
          type: string
      - name: username_like
        required: false
        in: query
        description: username_like
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserRead'
          description: ''
      tags:
      - v1
    post:
      operationId: createUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
      tags:
      - v1
  /v1/accounts/users/{id}/:
    get:
      operationId: retrieveUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: username
        required: false
        in: query
        description: username
        schema:
          type: string
      - name: first_name
        required: false
        in: query
        description: first_name
        schema:
          type: string
      - name: last_name
        required: false
        in: query
        description: last_name
        schema:
          type: string
      - name: email
        required: false
        in: query
        description: email
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: date_joined
        required: false
        in: query
        description: date_joined
        schema:
          type: string
      - name: username_like
        required: false
        in: query
        description: username_like
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRead'
          description: ''
      tags:
      - v1
    put:
      operationId: updateUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: username
        required: false
        in: query
        description: username
        schema:
          type: string
      - name: first_name
        required: false
        in: query
        description: first_name
        schema:
          type: string
      - name: last_name
        required: false
        in: query
        description: last_name
        schema:
          type: string
      - name: email
        required: false
        in: query
        description: email
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: date_joined
        required: false
        in: query
        description: date_joined
        schema:
          type: string
      - name: username_like
        required: false
        in: query
        description: username_like
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserUpdate'
          description: ''
      tags:
      - v1
    patch:
      operationId: partialUpdateUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: username
        required: false
        in: query
        description: username
        schema:
          type: string
      - name: first_name
        required: false
        in: query
        description: first_name
        schema:
          type: string
      - name: last_name
        required: false
        in: query
        description: last_name
        schema:
          type: string
      - name: email
        required: false
        in: query
        description: email
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: date_joined
        required: false
        in: query
        description: date_joined
        schema:
          type: string
      - name: username_like
        required: false
        in: query
        description: username_like
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserUpdate'
          description: ''
      tags:
      - v1
    delete:
      operationId: destroyUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: username
        required: false
        in: query
        description: username
        schema:
          type: string
      - name: first_name
        required: false
        in: query
        description: first_name
        schema:
          type: string
      - name: last_name
        required: false
        in: query
        description: last_name
        schema:
          type: string
      - name: email
        required: false
        in: query
        description: email
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: date_joined
        required: false
        in: query
        description: date_joined
        schema:
          type: string
      - name: username_like
        required: false
        in: query
        description: username_like
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - v1
  /v1/accounts/login/:
    post:
      operationId: createAuthToken
      description: ''
      parameters: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
      tags:
      - v1
  /v1/accounts/logout/:
    post:
      operationId: createLogout
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - v1
  /v1/accounts/activate/:
    post:
      operationId: createActivate
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - v1
  /v1/accounts/password_change/:
    post:
      operationId: createPasswordChange
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - v1
  /v1/accounts/password_forget/:
    post:
      operationId: createPasswordForget
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - v1
  /v1/accounts/password_reset/:
    post:
      operationId: createPasswordReset
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - v1
components:
  schemas:
    UserRead:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
          description: "\u3053\u306E\u9805\u76EE\u306F\u5FC5\u9808\u3067\u3059\u3002\
            \u534A\u89D2\u30A2\u30EB\u30D5\u30A1\u30D9\u30C3\u30C8\u3001\u534A\u89D2\
            \u6570\u5B57\u3001@/./+/-/_ \u3067150\u6587\u5B57\u4EE5\u4E0B\u306B\u3057\
            \u3066\u304F\u3060\u3055\u3044\u3002"
        first_name:
          type: string
          readOnly: true
        last_name:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
        is_active:
          type: boolean
          readOnly: true
          description: "\u30E6\u30FC\u30B6\u30FC\u304C\u30A2\u30AF\u30C6\u30A3\u30D6\
            \u304B\u3069\u3046\u304B\u3092\u793A\u3057\u307E\u3059\u3002\u30A2\u30AB\
            \u30A6\u30F3\u30C8\u3092\u524A\u9664\u3059\u308B\u4EE3\u308F\u308A\u306B\
            \u9078\u629E\u3092\u89E3\u9664\u3057\u3066\u304F\u3060\u3055\u3044\u3002"
        date_joined:
          type: string
          format: date-time
          readOnly: true
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
      - username
      - password
    UserCreate:
      type: object
      properties:
        password:
          type: string
          maxLength: 128
        username:
          type: string
          description: "\u3053\u306E\u9805\u76EE\u306F\u5FC5\u9808\u3067\u3059\u3002\
            \u534A\u89D2\u30A2\u30EB\u30D5\u30A1\u30D9\u30C3\u30C8\u3001\u534A\u89D2\
            \u6570\u5B57\u3001@/./+/-/_ \u3067150\u6587\u5B57\u4EE5\u4E0B\u306B\u3057\
            \u3066\u304F\u3060\u3055\u3044\u3002"
          pattern: ^[\w.@+-]+\z
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
      required:
      - password
      - username
      - email
    UserUpdate:
      type: object
      properties:
        username:
          type: string
          description: "\u3053\u306E\u9805\u76EE\u306F\u5FC5\u9808\u3067\u3059\u3002\
            \u534A\u89D2\u30A2\u30EB\u30D5\u30A1\u30D9\u30C3\u30C8\u3001\u534A\u89D2\
            \u6570\u5B57\u3001@/./+/-/_ \u3067150\u6587\u5B57\u4EE5\u4E0B\u306B\u3057\
            \u3066\u304F\u3060\u3055\u3044\u3002"
          pattern: ^[\w.@+-]+\z
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - username
